//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo;

/**
 * Linked to core.clinical.SupportNetworkFamily business object (ID: 1003100005).
 */
public class SupportNetworkFamily extends ims.core.clinical.vo.SupportNetworkFamilyRefVo implements ims.vo.ImsCloneable, Comparable
{
	private static final long serialVersionUID = 1L;

	public SupportNetworkFamily()
	{
	}
	public SupportNetworkFamily(Integer id, int version)
	{
		super(id, version);
	}
	public SupportNetworkFamily(ims.core.vo.beans.SupportNetworkFamilyBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.carername = bean.getCarerName();
		this.carerrelationship = bean.getCarerRelationship() == null ? null : ims.core.vo.lookups.SupportNetworkRelationship.buildLookup(bean.getCarerRelationship());
		this.careraddress = bean.getCarerAddress();
		this.carerhomephone = bean.getCarerHomePhone();
		this.carermobilephone = bean.getCarerMobilePhone();
		this.carerworkphone = bean.getCarerWorkPhone();
		this.careremail = bean.getCarerEmail();
		this.ismaincarer = bean.getIsMainCarer();
		this.emergencycontactorder = bean.getEmergencyContactOrder() == null ? null : ims.core.vo.lookups.SupportNetworkEmergencyContact.buildLookup(bean.getEmergencyContactOrder());
		this.iscurrentlyactivefamilysupport = bean.getIsCurrentlyActiveFamilySupport();
		this.sysinfo = bean.getSysInfo() == null ? null : bean.getSysInfo().buildSystemInformation();
		this.discussprogress = bean.getDiscussProgress();
		this.patient = bean.getPatient() == null ? null : new ims.core.patient.vo.PatientRefVo(new Integer(bean.getPatient().getId()), bean.getPatient().getVersion());
		this.authoringinfo = bean.getAuthoringInfo() == null ? null : bean.getAuthoringInfo().buildVo();
		this.fitandwell = bean.getFitAndWell();
		this.awareclientposition = bean.getAwareClientPosition();
		this.permissiontocontact = bean.getPermissionToContact();
		this.recordinginformation = bean.getRecordingInformation() == null ? null : bean.getRecordingInformation().buildVo();
		this.inactivatinguser = bean.getInactivatingUser() == null ? null : bean.getInactivatingUser().buildVo();
		this.inactivatingdatetime = bean.getInactivatingDateTime() == null ? null : bean.getInactivatingDateTime().buildDateTime();
	}
	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.beans.SupportNetworkFamilyBean bean)
	{
		this.id = bean.getId();
		this.version = bean.getVersion();
		this.carername = bean.getCarerName();
		this.carerrelationship = bean.getCarerRelationship() == null ? null : ims.core.vo.lookups.SupportNetworkRelationship.buildLookup(bean.getCarerRelationship());
		this.careraddress = bean.getCarerAddress();
		this.carerhomephone = bean.getCarerHomePhone();
		this.carermobilephone = bean.getCarerMobilePhone();
		this.carerworkphone = bean.getCarerWorkPhone();
		this.careremail = bean.getCarerEmail();
		this.ismaincarer = bean.getIsMainCarer();
		this.emergencycontactorder = bean.getEmergencyContactOrder() == null ? null : ims.core.vo.lookups.SupportNetworkEmergencyContact.buildLookup(bean.getEmergencyContactOrder());
		this.iscurrentlyactivefamilysupport = bean.getIsCurrentlyActiveFamilySupport();
		this.sysinfo = bean.getSysInfo() == null ? null : bean.getSysInfo().buildSystemInformation();
		this.discussprogress = bean.getDiscussProgress();
		this.patient = bean.getPatient() == null ? null : new ims.core.patient.vo.PatientRefVo(new Integer(bean.getPatient().getId()), bean.getPatient().getVersion());
		this.authoringinfo = bean.getAuthoringInfo() == null ? null : bean.getAuthoringInfo().buildVo(map);
		this.fitandwell = bean.getFitAndWell();
		this.awareclientposition = bean.getAwareClientPosition();
		this.permissiontocontact = bean.getPermissionToContact();
		this.recordinginformation = bean.getRecordingInformation() == null ? null : bean.getRecordingInformation().buildVo(map);
		this.inactivatinguser = bean.getInactivatingUser() == null ? null : bean.getInactivatingUser().buildVo(map);
		this.inactivatingdatetime = bean.getInactivatingDateTime() == null ? null : bean.getInactivatingDateTime().buildDateTime();
	}
	public ims.vo.ValueObjectBean getBean()
	{
		return this.getBean(new ims.vo.ValueObjectBeanMap());
	}
	public ims.vo.ValueObjectBean getBean(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.beans.SupportNetworkFamilyBean bean = null;
		if(map != null)
			bean = (ims.core.vo.beans.SupportNetworkFamilyBean)map.getValueObjectBean(this);
		if (bean == null)
		{
			bean = new ims.core.vo.beans.SupportNetworkFamilyBean();
			map.addValueObjectBean(this, bean);
			bean.populate(map, this);
		}
		return bean;
	}
	public Object getFieldValueByFieldName(String fieldName)
	{
		if(fieldName == null)
			throw new ims.framework.exceptions.CodingRuntimeException("Invalid field name");
		fieldName = fieldName.toUpperCase();
		if(fieldName.equals("CARERNAME"))
			return getCarerName();
		if(fieldName.equals("CARERRELATIONSHIP"))
			return getCarerRelationship();
		if(fieldName.equals("CARERADDRESS"))
			return getCarerAddress();
		if(fieldName.equals("CARERHOMEPHONE"))
			return getCarerHomePhone();
		if(fieldName.equals("CARERMOBILEPHONE"))
			return getCarerMobilePhone();
		if(fieldName.equals("CARERWORKPHONE"))
			return getCarerWorkPhone();
		if(fieldName.equals("CAREREMAIL"))
			return getCarerEmail();
		if(fieldName.equals("ISMAINCARER"))
			return getIsMainCarer();
		if(fieldName.equals("EMERGENCYCONTACTORDER"))
			return getEmergencyContactOrder();
		if(fieldName.equals("ISCURRENTLYACTIVEFAMILYSUPPORT"))
			return getIsCurrentlyActiveFamilySupport();
		if(fieldName.equals("SYSINFO"))
			return getSysInfo();
		if(fieldName.equals("DISCUSSPROGRESS"))
			return getDiscussProgress();
		if(fieldName.equals("PATIENT"))
			return getPatient();
		if(fieldName.equals("AUTHORINGINFO"))
			return getAuthoringInfo();
		if(fieldName.equals("FITANDWELL"))
			return getFitAndWell();
		if(fieldName.equals("AWARECLIENTPOSITION"))
			return getAwareClientPosition();
		if(fieldName.equals("PERMISSIONTOCONTACT"))
			return getPermissionToContact();
		if(fieldName.equals("RECORDINGINFORMATION"))
			return getRecordingInformation();
		if(fieldName.equals("INACTIVATINGUSER"))
			return getInactivatingUser();
		if(fieldName.equals("INACTIVATINGDATETIME"))
			return getInactivatingDateTime();
		return super.getFieldValueByFieldName(fieldName);
	}
	public boolean getCarerNameIsNotNull()
	{
		return this.carername != null;
	}
	public String getCarerName()
	{
		return this.carername;
	}
	public static int getCarerNameMaxLength()
	{
		return 60;
	}
	public void setCarerName(String value)
	{
		this.isValidated = false;
		this.carername = value;
	}
	public boolean getCarerRelationshipIsNotNull()
	{
		return this.carerrelationship != null;
	}
	public ims.core.vo.lookups.SupportNetworkRelationship getCarerRelationship()
	{
		return this.carerrelationship;
	}
	public void setCarerRelationship(ims.core.vo.lookups.SupportNetworkRelationship value)
	{
		this.isValidated = false;
		this.carerrelationship = value;
	}
	public boolean getCarerAddressIsNotNull()
	{
		return this.careraddress != null;
	}
	public String getCarerAddress()
	{
		return this.careraddress;
	}
	public static int getCarerAddressMaxLength()
	{
		return 120;
	}
	public void setCarerAddress(String value)
	{
		this.isValidated = false;
		this.careraddress = value;
	}
	public boolean getCarerHomePhoneIsNotNull()
	{
		return this.carerhomephone != null;
	}
	public String getCarerHomePhone()
	{
		return this.carerhomephone;
	}
	public static int getCarerHomePhoneMaxLength()
	{
		return 30;
	}
	public void setCarerHomePhone(String value)
	{
		this.isValidated = false;
		this.carerhomephone = value;
	}
	public boolean getCarerMobilePhoneIsNotNull()
	{
		return this.carermobilephone != null;
	}
	public String getCarerMobilePhone()
	{
		return this.carermobilephone;
	}
	public static int getCarerMobilePhoneMaxLength()
	{
		return 30;
	}
	public void setCarerMobilePhone(String value)
	{
		this.isValidated = false;
		this.carermobilephone = value;
	}
	public boolean getCarerWorkPhoneIsNotNull()
	{
		return this.carerworkphone != null;
	}
	public String getCarerWorkPhone()
	{
		return this.carerworkphone;
	}
	public static int getCarerWorkPhoneMaxLength()
	{
		return 30;
	}
	public void setCarerWorkPhone(String value)
	{
		this.isValidated = false;
		this.carerworkphone = value;
	}
	public boolean getCarerEmailIsNotNull()
	{
		return this.careremail != null;
	}
	public String getCarerEmail()
	{
		return this.careremail;
	}
	public static int getCarerEmailMaxLength()
	{
		return 50;
	}
	public void setCarerEmail(String value)
	{
		this.isValidated = false;
		this.careremail = value;
	}
	public boolean getIsMainCarerIsNotNull()
	{
		return this.ismaincarer != null;
	}
	public Boolean getIsMainCarer()
	{
		return this.ismaincarer;
	}
	public void setIsMainCarer(Boolean value)
	{
		this.isValidated = false;
		this.ismaincarer = value;
	}
	public boolean getEmergencyContactOrderIsNotNull()
	{
		return this.emergencycontactorder != null;
	}
	public ims.core.vo.lookups.SupportNetworkEmergencyContact getEmergencyContactOrder()
	{
		return this.emergencycontactorder;
	}
	public void setEmergencyContactOrder(ims.core.vo.lookups.SupportNetworkEmergencyContact value)
	{
		this.isValidated = false;
		this.emergencycontactorder = value;
	}
	public boolean getIsCurrentlyActiveFamilySupportIsNotNull()
	{
		return this.iscurrentlyactivefamilysupport != null;
	}
	public Boolean getIsCurrentlyActiveFamilySupport()
	{
		return this.iscurrentlyactivefamilysupport;
	}
	public void setIsCurrentlyActiveFamilySupport(Boolean value)
	{
		this.isValidated = false;
		this.iscurrentlyactivefamilysupport = value;
	}
	public boolean getSysInfoIsNotNull()
	{
		return this.sysinfo != null;
	}
	public ims.vo.SystemInformation getSysInfo()
	{
		return this.sysinfo;
	}
	public void setSysInfo(ims.vo.SystemInformation value)
	{
		this.isValidated = false;
		this.sysinfo = value;
	}
	public boolean getDiscussProgressIsNotNull()
	{
		return this.discussprogress != null;
	}
	public Boolean getDiscussProgress()
	{
		return this.discussprogress;
	}
	public void setDiscussProgress(Boolean value)
	{
		this.isValidated = false;
		this.discussprogress = value;
	}
	public boolean getPatientIsNotNull()
	{
		return this.patient != null;
	}
	public ims.core.patient.vo.PatientRefVo getPatient()
	{
		return this.patient;
	}
	public void setPatient(ims.core.patient.vo.PatientRefVo value)
	{
		this.isValidated = false;
		this.patient = value;
	}
	public boolean getAuthoringInfoIsNotNull()
	{
		return this.authoringinfo != null;
	}
	public ims.core.vo.AuthoringInformationVo getAuthoringInfo()
	{
		return this.authoringinfo;
	}
	public void setAuthoringInfo(ims.core.vo.AuthoringInformationVo value)
	{
		this.isValidated = false;
		this.authoringinfo = value;
	}
	public boolean getFitAndWellIsNotNull()
	{
		return this.fitandwell != null;
	}
	public Boolean getFitAndWell()
	{
		return this.fitandwell;
	}
	public void setFitAndWell(Boolean value)
	{
		this.isValidated = false;
		this.fitandwell = value;
	}
	public boolean getAwareClientPositionIsNotNull()
	{
		return this.awareclientposition != null;
	}
	public Boolean getAwareClientPosition()
	{
		return this.awareclientposition;
	}
	public void setAwareClientPosition(Boolean value)
	{
		this.isValidated = false;
		this.awareclientposition = value;
	}
	public boolean getPermissionToContactIsNotNull()
	{
		return this.permissiontocontact != null;
	}
	public Boolean getPermissionToContact()
	{
		return this.permissiontocontact;
	}
	public void setPermissionToContact(Boolean value)
	{
		this.isValidated = false;
		this.permissiontocontact = value;
	}
	public boolean getRecordingInformationIsNotNull()
	{
		return this.recordinginformation != null;
	}
	public ims.core.vo.RecordingUserInformationVo getRecordingInformation()
	{
		return this.recordinginformation;
	}
	public void setRecordingInformation(ims.core.vo.RecordingUserInformationVo value)
	{
		this.isValidated = false;
		this.recordinginformation = value;
	}
	public boolean getInactivatingUserIsNotNull()
	{
		return this.inactivatinguser != null;
	}
	public ims.core.vo.MemberOfStaffLiteVo getInactivatingUser()
	{
		return this.inactivatinguser;
	}
	public void setInactivatingUser(ims.core.vo.MemberOfStaffLiteVo value)
	{
		this.isValidated = false;
		this.inactivatinguser = value;
	}
	public boolean getInactivatingDateTimeIsNotNull()
	{
		return this.inactivatingdatetime != null;
	}
	public ims.framework.utils.DateTime getInactivatingDateTime()
	{
		return this.inactivatingdatetime;
	}
	public void setInactivatingDateTime(ims.framework.utils.DateTime value)
	{
		this.isValidated = false;
		this.inactivatingdatetime = value;
	}
	public boolean isValidated()
	{
		if(this.isBusy)
			return true;
		this.isBusy = true;
	
		if(!this.isValidated)
		{
			this.isBusy = false;
			return false;
		}
		if(this.authoringinfo != null)
		{
			if(!this.authoringinfo.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		if(this.recordinginformation != null)
		{
			if(!this.recordinginformation.isValidated())
			{
				this.isBusy = false;
				return false;
			}
		}
		this.isBusy = false;
		return true;
	}
	public String[] validate()
	{
		return validate(null);
	}
	public String[] validate(String[] existingErrors)
	{
		if(this.isBusy)
			return null;
		this.isBusy = true;
	
		java.util.ArrayList<String> listOfErrors = new java.util.ArrayList<String>();
		if(existingErrors != null)
		{
			for(int x = 0; x < existingErrors.length; x++)
			{
				listOfErrors.add(existingErrors[x]);
			}
		}
		if(this.carername == null || this.carername.length() == 0)
			listOfErrors.add("Name is a mandatory field");
		else if(this.carername.length() > 60)
			listOfErrors.add("The length of the field [carername] in the value object [ims.core.vo.SupportNetworkFamily] is too big. It should be less or equal to 60");
		if(this.carerrelationship == null)
			listOfErrors.add("Relationship is a mandatory field");
		if(this.careraddress != null)
			if(this.careraddress.length() > 120)
				listOfErrors.add("The length of the field [careraddress] in the value object [ims.core.vo.SupportNetworkFamily] is too big. It should be less or equal to 120");
		if(this.carerhomephone != null)
			if(this.carerhomephone.length() > 30)
				listOfErrors.add("The length of the field [carerhomephone] in the value object [ims.core.vo.SupportNetworkFamily] is too big. It should be less or equal to 30");
		if(this.carermobilephone != null)
			if(this.carermobilephone.length() > 30)
				listOfErrors.add("The length of the field [carermobilephone] in the value object [ims.core.vo.SupportNetworkFamily] is too big. It should be less or equal to 30");
		if(this.carerworkphone != null)
			if(this.carerworkphone.length() > 30)
				listOfErrors.add("The length of the field [carerworkphone] in the value object [ims.core.vo.SupportNetworkFamily] is too big. It should be less or equal to 30");
		if(this.careremail != null)
			if(this.careremail.length() > 50)
				listOfErrors.add("The length of the field [careremail] in the value object [ims.core.vo.SupportNetworkFamily] is too big. It should be less or equal to 50");
		if(this.patient == null)
			listOfErrors.add("Patient is mandatory");
		if(this.authoringinfo == null)
			listOfErrors.add("Authoring HCP and Date/Time are mandatory");
		if(this.authoringinfo != null)
		{
			String[] listOfOtherErrors = this.authoringinfo.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		if(this.recordinginformation != null)
		{
			String[] listOfOtherErrors = this.recordinginformation.validate();
			if(listOfOtherErrors != null)
			{
				for(int x = 0; x < listOfOtherErrors.length; x++)
				{
					listOfErrors.add(listOfOtherErrors[x]);
				}
			}
		}
		int errorCount = listOfErrors.size();
		if(errorCount == 0)
		{
			this.isBusy = false;
			this.isValidated = true;
			return null;
		}
		String[] result = new String[errorCount];
		for(int x = 0; x < errorCount; x++)
			result[x] = (String)listOfErrors.get(x);
		this.isBusy = false;
		this.isValidated = false;
		return result;
	}
	public void clearIDAndVersion()
	{
		this.id = null;
		this.version = 0;
	}
	public Object clone()
	{
		if(this.isBusy)
			return this;
		this.isBusy = true;
	
		SupportNetworkFamily clone = new SupportNetworkFamily(this.id, this.version);
		
		clone.carername = this.carername;
		if(this.carerrelationship == null)
			clone.carerrelationship = null;
		else
			clone.carerrelationship = (ims.core.vo.lookups.SupportNetworkRelationship)this.carerrelationship.clone();
		clone.careraddress = this.careraddress;
		clone.carerhomephone = this.carerhomephone;
		clone.carermobilephone = this.carermobilephone;
		clone.carerworkphone = this.carerworkphone;
		clone.careremail = this.careremail;
		clone.ismaincarer = this.ismaincarer;
		if(this.emergencycontactorder == null)
			clone.emergencycontactorder = null;
		else
			clone.emergencycontactorder = (ims.core.vo.lookups.SupportNetworkEmergencyContact)this.emergencycontactorder.clone();
		clone.iscurrentlyactivefamilysupport = this.iscurrentlyactivefamilysupport;
		if(this.sysinfo == null)
			clone.sysinfo = null;
		else
			clone.sysinfo = (ims.vo.SystemInformation)this.sysinfo.clone();
		clone.discussprogress = this.discussprogress;
		clone.patient = this.patient;
		if(this.authoringinfo == null)
			clone.authoringinfo = null;
		else
			clone.authoringinfo = (ims.core.vo.AuthoringInformationVo)this.authoringinfo.clone();
		clone.fitandwell = this.fitandwell;
		clone.awareclientposition = this.awareclientposition;
		clone.permissiontocontact = this.permissiontocontact;
		if(this.recordinginformation == null)
			clone.recordinginformation = null;
		else
			clone.recordinginformation = (ims.core.vo.RecordingUserInformationVo)this.recordinginformation.clone();
		if(this.inactivatinguser == null)
			clone.inactivatinguser = null;
		else
			clone.inactivatinguser = (ims.core.vo.MemberOfStaffLiteVo)this.inactivatinguser.clone();
		if(this.inactivatingdatetime == null)
			clone.inactivatingdatetime = null;
		else
			clone.inactivatingdatetime = (ims.framework.utils.DateTime)this.inactivatingdatetime.clone();
		clone.isValidated = this.isValidated;
		
		this.isBusy = false;
		return clone;
	}
	public int compareTo(Object obj)
	{
		return compareTo(obj, true);
	}
	public int compareTo(Object obj, boolean caseInsensitive)
	{
		if (obj == null)
		{
			return -1;
		}
		if(caseInsensitive); // this is to avoid eclipse warning only.
		if (!(SupportNetworkFamily.class.isAssignableFrom(obj.getClass())))
		{
			throw new ClassCastException("A SupportNetworkFamily object cannot be compared an Object of type " + obj.getClass().getName());
		}
		SupportNetworkFamily compareObj = (SupportNetworkFamily)obj;
		int retVal = 0;
		if (retVal == 0)
		{
			if(this.getSysInfo() == null && compareObj.getSysInfo() != null)
				return -1;
			if(this.getSysInfo() != null && compareObj.getSysInfo() == null)
				return 1;
			if(this.getSysInfo() != null && compareObj.getSysInfo() != null)
				retVal = this.getSysInfo().compareTo(compareObj.getSysInfo());
		}
		return retVal;
	}
	public synchronized static int generateValueObjectUniqueID()
	{
		return ims.vo.ValueObject.generateUniqueID();
	}
	public int countFieldsWithValue()
	{
		int count = 0;
		if(this.carername != null)
			count++;
		if(this.carerrelationship != null)
			count++;
		if(this.careraddress != null)
			count++;
		if(this.carerhomephone != null)
			count++;
		if(this.carermobilephone != null)
			count++;
		if(this.carerworkphone != null)
			count++;
		if(this.careremail != null)
			count++;
		if(this.ismaincarer != null)
			count++;
		if(this.emergencycontactorder != null)
			count++;
		if(this.iscurrentlyactivefamilysupport != null)
			count++;
		if(this.sysinfo != null)
			count++;
		if(this.discussprogress != null)
			count++;
		if(this.patient != null)
			count++;
		if(this.authoringinfo != null)
			count++;
		if(this.fitandwell != null)
			count++;
		if(this.awareclientposition != null)
			count++;
		if(this.permissiontocontact != null)
			count++;
		if(this.recordinginformation != null)
			count++;
		if(this.inactivatinguser != null)
			count++;
		if(this.inactivatingdatetime != null)
			count++;
		return count;
	}
	public int countValueObjectFields()
	{
		return 20;
	}
	protected String carername;
	protected ims.core.vo.lookups.SupportNetworkRelationship carerrelationship;
	protected String careraddress;
	protected String carerhomephone;
	protected String carermobilephone;
	protected String carerworkphone;
	protected String careremail;
	protected Boolean ismaincarer;
	protected ims.core.vo.lookups.SupportNetworkEmergencyContact emergencycontactorder;
	protected Boolean iscurrentlyactivefamilysupport;
	protected ims.vo.SystemInformation sysinfo;
	protected Boolean discussprogress;
	protected ims.core.patient.vo.PatientRefVo patient;
	protected ims.core.vo.AuthoringInformationVo authoringinfo;
	protected Boolean fitandwell;
	protected Boolean awareclientposition;
	protected Boolean permissiontocontact;
	protected ims.core.vo.RecordingUserInformationVo recordinginformation;
	protected ims.core.vo.MemberOfStaffLiteVo inactivatinguser;
	protected ims.framework.utils.DateTime inactivatingdatetime;
	private boolean isValidated = false;
	private boolean isBusy = false;
}

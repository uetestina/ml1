//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.admin.vo.beans;

public class ConfiguredJobVoBean extends ims.vo.ValueObjectBean
{
	public ConfiguredJobVoBean()
	{
	}
	public ConfiguredJobVoBean(ims.admin.vo.ConfiguredJobVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.startdatetime = vo.getStartDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getStartDateTime().getBean();
		this.enddatetime = vo.getEndDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getEndDateTime().getBean();
		this.iscrontrigger = vo.getIsCronTrigger();
		this.cronexpression = vo.getCronExpression();
		this.lastrun = vo.getLastRun() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getLastRun().getBean();
		this.nextrun = vo.getNextRun() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getNextRun().getBean();
		this.cronexpressiondisplay = vo.getCronExpressionDisplay();
		this.systeminformation = vo.getSystemInformation() == null ? null : (ims.vo.SysInfoBean)vo.getSystemInformation().getBean();
		this.isactive = vo.getIsActive();
		this.description = vo.getDescription();
		this.scheduledjob = vo.getScheduledJob() == null ? null : (ims.admin.vo.beans.SystemJobVoBean)vo.getScheduledJob().getBean();
		this.frequency = vo.getFrequency() == null ? null : (ims.vo.LookupInstanceBean)vo.getFrequency().getBean();
		this.notificationsonsuccess = vo.getNotificationsOnSuccess() == null ? null : vo.getNotificationsOnSuccess().getBeanCollection();
		this.notificationsonfailure = vo.getNotificationsOnFailure() == null ? null : vo.getNotificationsOnFailure().getBeanCollection();
		this.name = vo.getName();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.admin.vo.ConfiguredJobVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.startdatetime = vo.getStartDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getStartDateTime().getBean();
		this.enddatetime = vo.getEndDateTime() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getEndDateTime().getBean();
		this.iscrontrigger = vo.getIsCronTrigger();
		this.cronexpression = vo.getCronExpression();
		this.lastrun = vo.getLastRun() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getLastRun().getBean();
		this.nextrun = vo.getNextRun() == null ? null : (ims.framework.utils.beans.DateTimeBean)vo.getNextRun().getBean();
		this.cronexpressiondisplay = vo.getCronExpressionDisplay();
		this.systeminformation = vo.getSystemInformation() == null ? null : (ims.vo.SysInfoBean)vo.getSystemInformation().getBean();
		this.isactive = vo.getIsActive();
		this.description = vo.getDescription();
		this.scheduledjob = vo.getScheduledJob() == null ? null : (ims.admin.vo.beans.SystemJobVoBean)vo.getScheduledJob().getBean(map);
		this.frequency = vo.getFrequency() == null ? null : (ims.vo.LookupInstanceBean)vo.getFrequency().getBean();
		this.notificationsonsuccess = vo.getNotificationsOnSuccess() == null ? null : vo.getNotificationsOnSuccess().getBeanCollection();
		this.notificationsonfailure = vo.getNotificationsOnFailure() == null ? null : vo.getNotificationsOnFailure().getBeanCollection();
		this.name = vo.getName();
	}

	public ims.admin.vo.ConfiguredJobVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.admin.vo.ConfiguredJobVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.admin.vo.ConfiguredJobVo vo = null;
		if(map != null)
			vo = (ims.admin.vo.ConfiguredJobVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.admin.vo.ConfiguredJobVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public ims.framework.utils.beans.DateTimeBean getStartDateTime()
	{
		return this.startdatetime;
	}
	public void setStartDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.startdatetime = value;
	}
	public ims.framework.utils.beans.DateTimeBean getEndDateTime()
	{
		return this.enddatetime;
	}
	public void setEndDateTime(ims.framework.utils.beans.DateTimeBean value)
	{
		this.enddatetime = value;
	}
	public Boolean getIsCronTrigger()
	{
		return this.iscrontrigger;
	}
	public void setIsCronTrigger(Boolean value)
	{
		this.iscrontrigger = value;
	}
	public String getCronExpression()
	{
		return this.cronexpression;
	}
	public void setCronExpression(String value)
	{
		this.cronexpression = value;
	}
	public ims.framework.utils.beans.DateTimeBean getLastRun()
	{
		return this.lastrun;
	}
	public void setLastRun(ims.framework.utils.beans.DateTimeBean value)
	{
		this.lastrun = value;
	}
	public ims.framework.utils.beans.DateTimeBean getNextRun()
	{
		return this.nextrun;
	}
	public void setNextRun(ims.framework.utils.beans.DateTimeBean value)
	{
		this.nextrun = value;
	}
	public String getCronExpressionDisplay()
	{
		return this.cronexpressiondisplay;
	}
	public void setCronExpressionDisplay(String value)
	{
		this.cronexpressiondisplay = value;
	}
	public ims.vo.SysInfoBean getSystemInformation()
	{
		return this.systeminformation;
	}
	public void setSystemInformation(ims.vo.SysInfoBean value)
	{
		this.systeminformation = value;
	}
	public Boolean getIsActive()
	{
		return this.isactive;
	}
	public void setIsActive(Boolean value)
	{
		this.isactive = value;
	}
	public String getDescription()
	{
		return this.description;
	}
	public void setDescription(String value)
	{
		this.description = value;
	}
	public ims.admin.vo.beans.SystemJobVoBean getScheduledJob()
	{
		return this.scheduledjob;
	}
	public void setScheduledJob(ims.admin.vo.beans.SystemJobVoBean value)
	{
		this.scheduledjob = value;
	}
	public ims.vo.LookupInstanceBean getFrequency()
	{
		return this.frequency;
	}
	public void setFrequency(ims.vo.LookupInstanceBean value)
	{
		this.frequency = value;
	}
	public ims.core.vo.beans.ConfiguredJobNotificationVoBean[] getNotificationsOnSuccess()
	{
		return this.notificationsonsuccess;
	}
	public void setNotificationsOnSuccess(ims.core.vo.beans.ConfiguredJobNotificationVoBean[] value)
	{
		this.notificationsonsuccess = value;
	}
	public ims.core.vo.beans.ConfiguredJobNotificationVoBean[] getNotificationsOnFailure()
	{
		return this.notificationsonfailure;
	}
	public void setNotificationsOnFailure(ims.core.vo.beans.ConfiguredJobNotificationVoBean[] value)
	{
		this.notificationsonfailure = value;
	}
	public String getName()
	{
		return this.name;
	}
	public void setName(String value)
	{
		this.name = value;
	}

	private Integer id;
	private int version;
	private ims.framework.utils.beans.DateTimeBean startdatetime;
	private ims.framework.utils.beans.DateTimeBean enddatetime;
	private Boolean iscrontrigger;
	private String cronexpression;
	private ims.framework.utils.beans.DateTimeBean lastrun;
	private ims.framework.utils.beans.DateTimeBean nextrun;
	private String cronexpressiondisplay;
	private ims.vo.SysInfoBean systeminformation;
	private Boolean isactive;
	private String description;
	private ims.admin.vo.beans.SystemJobVoBean scheduledjob;
	private ims.vo.LookupInstanceBean frequency;
	private ims.core.vo.beans.ConfiguredJobNotificationVoBean[] notificationsonsuccess;
	private ims.core.vo.beans.ConfiguredJobNotificationVoBean[] notificationsonfailure;
	private String name;
}

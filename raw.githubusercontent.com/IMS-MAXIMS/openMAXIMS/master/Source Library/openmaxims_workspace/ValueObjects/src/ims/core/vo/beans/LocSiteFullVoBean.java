//#############################################################################
//#                                                                           #
//#  Copyright (C) <2015>  <IMS MAXIMS>                                       #
//#                                                                           #
//#  This program is free software: you can redistribute it and/or modify     #
//#  it under the terms of the GNU Affero General Public License as           #
//#  published by the Free Software Foundation, either version 3 of the       #
//#  License, or (at your option) any later version.                          # 
//#                                                                           #
//#  This program is distributed in the hope that it will be useful,          #
//#  but WITHOUT ANY WARRANTY; without even the implied warranty of           #
//#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the            #
//#  GNU Affero General Public License for more details.                      #
//#                                                                           #
//#  You should have received a copy of the GNU Affero General Public License #
//#  along with this program.  If not, see <http://www.gnu.org/licenses/>.    #
//#                                                                           #
//#  IMS MAXIMS provides absolutely NO GUARANTEE OF THE CLINICAL SAFTEY of    #
//#  this program.  Users of this software do so entirely at their own risk.  #
//#  IMS MAXIMS only ensures the Clinical Safety of unaltered run-time        #
//#  software that it builds, deploys and maintains.                          #
//#                                                                           #
//#############################################################################
//#EOH
// This code was generated by Barbara Worwood using IMS Development Environment (version 1.80 build 5589.25814)
// Copyright (C) 1995-2015 IMS MAXIMS. All rights reserved.
// WARNING: DO NOT MODIFY the content of this file

package ims.core.vo.beans;

public class LocSiteFullVoBean extends ims.vo.ValueObjectBean
{
	public LocSiteFullVoBean()
	{
	}
	public LocSiteFullVoBean(ims.core.vo.LocSiteFullVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.name = vo.getName();
		this.isactive = vo.getIsActive();
		this.isvirtual = vo.getIsVirtual();
		this.type = vo.getType() == null ? null : (ims.vo.LookupInstanceBean)vo.getType().getBean();
		this.displayinedtracking = vo.getDisplayInEDTracking();
		this.casenotefolderlocation = vo.getCaseNoteFolderLocation();
		this.address = vo.getAddress() == null ? null : (ims.core.vo.beans.PersonAddressBean)vo.getAddress().getBean();
		this.secureaccommodation = vo.getSecureAccommodation();
		this.treatinghosp = vo.getTreatingHosp();
		this.referringhospital = vo.getReferringHospital();
		this.codemappings = vo.getCodeMappings() == null ? null : vo.getCodeMappings().getBeanCollection();
		this.locations = vo.getLocations() == null ? null : vo.getLocations().getBeanCollection();
		this.parentlocation = vo.getParentLocation() == null ? null : (ims.core.vo.beans.LocMostVoBean)vo.getParentLocation().getBean();
		this.printers = vo.getPrinters() == null ? null : vo.getPrinters().getBeanCollection();
		this.defaultprinter = vo.getDefaultPrinter() == null ? null : (ims.admin.vo.beans.PrinterVoBean)vo.getDefaultPrinter().getBean();
		this.designatedprinterfornewresults = vo.getDesignatedPrinterForNewResults() == null ? null : (ims.admin.vo.beans.PrinterVoBean)vo.getDesignatedPrinterForNewResults().getBean();
		this.designatedprinterforocsorder = vo.getDesignatedPrinterForOCSOrder() == null ? null : (ims.admin.vo.beans.PrinterVoBean)vo.getDesignatedPrinterForOCSOrder().getBean();
		this.services = vo.getServices() == null ? null : vo.getServices().getBeanCollection();
		this.activitylimitgroup = vo.getActivityLimitGroup() == null ? null : vo.getActivityLimitGroup().getBeanCollection();
		this.parentorganisation = vo.getParentOrganisation() == null ? null : (ims.core.vo.beans.OrganisationVoBean)vo.getParentOrganisation().getBean();
	}

	public void populate(ims.vo.ValueObjectBeanMap map, ims.core.vo.LocSiteFullVo vo)
	{
		this.id = vo.getBoId();
		this.version = vo.getBoVersion();
		this.name = vo.getName();
		this.isactive = vo.getIsActive();
		this.isvirtual = vo.getIsVirtual();
		this.type = vo.getType() == null ? null : (ims.vo.LookupInstanceBean)vo.getType().getBean();
		this.displayinedtracking = vo.getDisplayInEDTracking();
		this.casenotefolderlocation = vo.getCaseNoteFolderLocation();
		this.address = vo.getAddress() == null ? null : (ims.core.vo.beans.PersonAddressBean)vo.getAddress().getBean(map);
		this.secureaccommodation = vo.getSecureAccommodation();
		this.treatinghosp = vo.getTreatingHosp();
		this.referringhospital = vo.getReferringHospital();
		this.codemappings = vo.getCodeMappings() == null ? null : vo.getCodeMappings().getBeanCollection();
		this.locations = vo.getLocations() == null ? null : vo.getLocations().getBeanCollection();
		this.parentlocation = vo.getParentLocation() == null ? null : (ims.core.vo.beans.LocMostVoBean)vo.getParentLocation().getBean(map);
		this.printers = vo.getPrinters() == null ? null : vo.getPrinters().getBeanCollection();
		this.defaultprinter = vo.getDefaultPrinter() == null ? null : (ims.admin.vo.beans.PrinterVoBean)vo.getDefaultPrinter().getBean(map);
		this.designatedprinterfornewresults = vo.getDesignatedPrinterForNewResults() == null ? null : (ims.admin.vo.beans.PrinterVoBean)vo.getDesignatedPrinterForNewResults().getBean(map);
		this.designatedprinterforocsorder = vo.getDesignatedPrinterForOCSOrder() == null ? null : (ims.admin.vo.beans.PrinterVoBean)vo.getDesignatedPrinterForOCSOrder().getBean(map);
		this.services = vo.getServices() == null ? null : vo.getServices().getBeanCollection();
		this.activitylimitgroup = vo.getActivityLimitGroup() == null ? null : vo.getActivityLimitGroup().getBeanCollection();
		this.parentorganisation = vo.getParentOrganisation() == null ? null : (ims.core.vo.beans.OrganisationVoBean)vo.getParentOrganisation().getBean(map);
	}

	public ims.core.vo.LocSiteFullVo buildVo()
	{
		return this.buildVo(new ims.vo.ValueObjectBeanMap());
	}

	public ims.core.vo.LocSiteFullVo buildVo(ims.vo.ValueObjectBeanMap map)
	{
		ims.core.vo.LocSiteFullVo vo = null;
		if(map != null)
			vo = (ims.core.vo.LocSiteFullVo)map.getValueObject(this);
		if(vo == null)
		{
			vo = new ims.core.vo.LocSiteFullVo();
			map.addValueObject(this, vo);
			vo.populate(map, this);
		}
		return vo;
	}

	public Integer getId()
	{
		return this.id;
	}
	public void setId(Integer value)
	{
		this.id = value;
	}
	public int getVersion()
	{
		return this.version;
	}
	public void setVersion(int value)
	{
		this.version = value;
	}
	public String getName()
	{
		return this.name;
	}
	public void setName(String value)
	{
		this.name = value;
	}
	public Boolean getIsActive()
	{
		return this.isactive;
	}
	public void setIsActive(Boolean value)
	{
		this.isactive = value;
	}
	public Boolean getIsVirtual()
	{
		return this.isvirtual;
	}
	public void setIsVirtual(Boolean value)
	{
		this.isvirtual = value;
	}
	public ims.vo.LookupInstanceBean getType()
	{
		return this.type;
	}
	public void setType(ims.vo.LookupInstanceBean value)
	{
		this.type = value;
	}
	public Boolean getDisplayInEDTracking()
	{
		return this.displayinedtracking;
	}
	public void setDisplayInEDTracking(Boolean value)
	{
		this.displayinedtracking = value;
	}
	public Boolean getCaseNoteFolderLocation()
	{
		return this.casenotefolderlocation;
	}
	public void setCaseNoteFolderLocation(Boolean value)
	{
		this.casenotefolderlocation = value;
	}
	public ims.core.vo.beans.PersonAddressBean getAddress()
	{
		return this.address;
	}
	public void setAddress(ims.core.vo.beans.PersonAddressBean value)
	{
		this.address = value;
	}
	public Boolean getSecureAccommodation()
	{
		return this.secureaccommodation;
	}
	public void setSecureAccommodation(Boolean value)
	{
		this.secureaccommodation = value;
	}
	public Boolean getTreatingHosp()
	{
		return this.treatinghosp;
	}
	public void setTreatingHosp(Boolean value)
	{
		this.treatinghosp = value;
	}
	public Boolean getReferringHospital()
	{
		return this.referringhospital;
	}
	public void setReferringHospital(Boolean value)
	{
		this.referringhospital = value;
	}
	public ims.core.vo.beans.TaxonomyMapBean[] getCodeMappings()
	{
		return this.codemappings;
	}
	public void setCodeMappings(ims.core.vo.beans.TaxonomyMapBean[] value)
	{
		this.codemappings = value;
	}
	public ims.core.vo.beans.LocMostVoBean[] getLocations()
	{
		return this.locations;
	}
	public void setLocations(ims.core.vo.beans.LocMostVoBean[] value)
	{
		this.locations = value;
	}
	public ims.core.vo.beans.LocMostVoBean getParentLocation()
	{
		return this.parentlocation;
	}
	public void setParentLocation(ims.core.vo.beans.LocMostVoBean value)
	{
		this.parentlocation = value;
	}
	public ims.admin.vo.beans.PrinterVoBean[] getPrinters()
	{
		return this.printers;
	}
	public void setPrinters(ims.admin.vo.beans.PrinterVoBean[] value)
	{
		this.printers = value;
	}
	public ims.admin.vo.beans.PrinterVoBean getDefaultPrinter()
	{
		return this.defaultprinter;
	}
	public void setDefaultPrinter(ims.admin.vo.beans.PrinterVoBean value)
	{
		this.defaultprinter = value;
	}
	public ims.admin.vo.beans.PrinterVoBean getDesignatedPrinterForNewResults()
	{
		return this.designatedprinterfornewresults;
	}
	public void setDesignatedPrinterForNewResults(ims.admin.vo.beans.PrinterVoBean value)
	{
		this.designatedprinterfornewresults = value;
	}
	public ims.admin.vo.beans.PrinterVoBean getDesignatedPrinterForOCSOrder()
	{
		return this.designatedprinterforocsorder;
	}
	public void setDesignatedPrinterForOCSOrder(ims.admin.vo.beans.PrinterVoBean value)
	{
		this.designatedprinterforocsorder = value;
	}
	public ims.core.vo.beans.LocationServiceVoBean[] getServices()
	{
		return this.services;
	}
	public void setServices(ims.core.vo.beans.LocationServiceVoBean[] value)
	{
		this.services = value;
	}
	public ims.core.vo.beans.ActivityGroupLimitsVoBean[] getActivityLimitGroup()
	{
		return this.activitylimitgroup;
	}
	public void setActivityLimitGroup(ims.core.vo.beans.ActivityGroupLimitsVoBean[] value)
	{
		this.activitylimitgroup = value;
	}
	public ims.core.vo.beans.OrganisationVoBean getParentOrganisation()
	{
		return this.parentorganisation;
	}
	public void setParentOrganisation(ims.core.vo.beans.OrganisationVoBean value)
	{
		this.parentorganisation = value;
	}

	private Integer id;
	private int version;
	private String name;
	private Boolean isactive;
	private Boolean isvirtual;
	private ims.vo.LookupInstanceBean type;
	private Boolean displayinedtracking;
	private Boolean casenotefolderlocation;
	private ims.core.vo.beans.PersonAddressBean address;
	private Boolean secureaccommodation;
	private Boolean treatinghosp;
	private Boolean referringhospital;
	private ims.core.vo.beans.TaxonomyMapBean[] codemappings;
	private ims.core.vo.beans.LocMostVoBean[] locations;
	private ims.core.vo.beans.LocMostVoBean parentlocation;
	private ims.admin.vo.beans.PrinterVoBean[] printers;
	private ims.admin.vo.beans.PrinterVoBean defaultprinter;
	private ims.admin.vo.beans.PrinterVoBean designatedprinterfornewresults;
	private ims.admin.vo.beans.PrinterVoBean designatedprinterforocsorder;
	private ims.core.vo.beans.LocationServiceVoBean[] services;
	private ims.core.vo.beans.ActivityGroupLimitsVoBean[] activitylimitgroup;
	private ims.core.vo.beans.OrganisationVoBean parentorganisation;
}
